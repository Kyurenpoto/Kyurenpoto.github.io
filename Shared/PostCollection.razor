<h1>@(title + " (" + Collections.Count() + ")")</h1>

<section class="post-collection">
    @foreach (var item in Collections)
    {
        <div class="card-wrapper overlay-wrap">
            <article class="post-summary-card">
                <header class="card-header">
                    <NavLink class="card-title" href="@item.Path">@item.Title</NavLink>
                    <div class="card-modified">@item.DateModified</div>
                    <div class="card-created">@item.DateCreated</div>
                </header>
                <div class="card-contents">
                    <img class="fit-img" src="@item.PathCardImage" alt="@item.ImageDescription">
                    <div class="card-description">@item.Description</div>
                </div>
                <footer class="card-footer">
                    <div class="card-tags">
                        @foreach(var tag in item.Tags.Split(";"))
                        {
                            <NavLink href="">@tag</NavLink>
                        }
                    </div>
                </footer>
            </article>
            <div class="overlay-secondary-bg-1" />
        </div>
    }
</section>

@code {
    [Parameter]
    public string collectionName { get; set; }

    [Parameter]
    public string title { get; set; }

    public class PostCard
    {
        public string Path { get; set; }
        public string Title { get; set; }
        public string Description { get; set; }
        public string PathCardImage { get; set; }
        public string ImageDescription { get; set; }
        public string Category { get; set; }
        public string Tags { get; set; }
        public DateTime DateCreated { get; set; }
        public DateTime DateModified { get; set; }
    }

    public List<PostCard> Cards = new List<PostCard>
    {
        new PostCard
        {
            Path = "post/1",
            Title = "논문 리뷰: Implicit Neural Representations with Periodic Activation Functions",
            Description = "기존의 ReLU 기반 MLP는 입력 신호의 고차 도함수를 나타낼 수 없기 때문에 미세 표현 능력이 부족하다. 이 논문에서는 주기 함수를 활성 함수로 사용해서 고차 도함수 정보를 회손하지 않도록 했다.",
            PathCardImage = "assets/images/sine-curve.png",
            ImageDescription = "sine curve",
            Category = "Machine Learning",
            Tags = "Neural Network > Activation Function",
            DateCreated = new DateTime(2020, 07, 05, 02, 12, 22),
            DateModified = new DateTime(2020, 07, 26, 11, 20, 00)
        },
        new PostCard
        {
            Path = "post/2",
            Title = "논문 리뷰: Towards Learning Convolutions from Scratch",
            Description = "MDL을 이용해 Fully-Connected NN에 비해 CNN이 가지는 이점을 공식화했다. 또한 LASSO를 응용해서 MDL로 찾아낸 이점을 최대화하는, 입력 데이터에 적합한 필터를 찾아냈다.",
            PathCardImage = "assets/images/circuits-5076887_1280.jpg",
            ImageDescription = "machine learning",
            Category = "Machine Learning",
            Tags = "Neural Network > Linear Layer",
            DateCreated = new DateTime(2020, 08, 23, 05, 40, 53),
            DateModified = new DateTime(2020, 08, 23, 05, 40, 53)
        },
    };

    private List<PostCard> collections = null;
    public List<PostCard> Collections
    {
        get
        {
            if (collections == null)
                collections = Cards.Where(x => x.Category.Equals(collectionName)).ToList();

            return collections;
        }
    }
}
